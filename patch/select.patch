diff --git b/R/select.R a/R/select.R
index f63869c..a67ae81 100644
--- b/R/select.R
+++ a/R/select.R
@@ -2,7 +2,30 @@
 #' @importFrom dplyr select
 #' @export
 select.duckplyr_df <- function(.data, ...) {
+  force(.data)
+
+  error_call <- dplyr_error_call()
+
+  loc <- tidyselect::eval_select(
+    expr(c(...)),
+    data = .data,
+    error_call = error_call
+  )
+
   # Our implementation
+  exprs <- exprs_from_loc(.data, loc)
+
+  rel_try(
+    "Can't use relational with zero-column result set." = (length(exprs) == 0),
+    {
+      rel <- duckdb_rel_from_df(.data)
+      out <- exprs_project(rel, exprs, .data)
+      return(out)
+    }, fallback = {
+      # FIXME: Remove fallback argument
+    }
+  )
+
   x_df <- .data
   class(x_df) <- "data.frame"
   out <- select(x_df, ...)
@@ -18,9 +41,9 @@ select.duckplyr_df <- function(.data, ...) {
     data = .data,
     error_call = error_call
   )
+  loc <- ensure_group_vars(loc, .data, notify = TRUE)
 
   # duckplyr: Backend-specific
-  loc <- ensure_group_vars(loc, .data, notify = TRUE)
   out <- dplyr_col_select(.data, loc)
   out <- set_names(out, names(loc))
 
