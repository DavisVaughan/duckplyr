diff --git b/R/count.R a/R/count.R
index 2d3783d..2066ee2 100644
--- b/R/count.R
+++ a/R/count.R
@@ -2,13 +2,29 @@
 #' @importFrom dplyr count
 #' @export
 count.duckplyr_df <- function(x, ..., wt = NULL, sort = FALSE, name = NULL, .drop = group_by_drop_default(x)) {
-  # Our implementation
-  rel_try(
-    "No relational implementation for count()" = TRUE,
-    {
+  force(x)
+
+  dplyr_local_error_call()
+
+  quos <- enquos(...)
+  exprs <- unname(map(quos, quo_get_expr))
+  is_name <- map_lgl(exprs, is_symbol)
+
+  if (all(is_name) && .drop && !sort) {
+    by_chr <- map_chr(exprs, as_string)
+    name <- check_name(name, by_chr)
+
+    if (!(name %in% by_chr)) {
+      n <- tally_n(x, {{ wt }})
+
+      out <- summarise(x, !!name := !!n, .by = c(!!!exprs))
+      out <- dplyr_reconstruct(out, x)
       return(out)
     }
-  )
+  }
+
+  # FIXME: optimize, no need to forward dots
+  # out <- count(x_df, !!!quos, wt = {{ wt }}, sort = sort, name = name, .drop = .drop)
 
   # dplyr forward
   count <- dplyr:::count.data.frame
