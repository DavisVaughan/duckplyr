diff --git b/R/arrange.R a/R/arrange.R
index 1133bbe..dfb1311 100644
--- b/R/arrange.R
+++ a/R/arrange.R
@@ -2,20 +2,39 @@
 #' @importFrom dplyr arrange
 #' @export
 arrange.duckplyr_df <- function(.data, ..., .by_group = FALSE, .locale = NULL) {
-  # Our implementation
-  x_df <- .data
-  class(x_df) <- "data.frame"
-  out <- arrange(x_df, ..., .by_group = .by_group, .locale = .locale)
-  out <- dplyr_reconstruct(out, .data)
-  return(out)
+  force(.data)
 
-  # dplyr implementation
   dots <- enquos(...)
+  dots <- unname(dots)
 
   if (.by_group) {
     dots <- c(quos(!!!groups(.data)), dots)
   }
 
+  # Our implementation
+  # Ensure `arrange()` appears in call stack
+  arrange <- rel_try
+  arrange(
+    ".locale argument not supported" = !is.null(.locale),
+    "dplyr.legacy_locale not supported" = isTRUE(getOption("dplyr.legacy_locale")),
+    {
+      if (length(dots) == 0) {
+        return(.data)
+      }
+      exprs <- rel_translate_dots(dots, .data)
+      rel <- duckdb_rel_from_df(.data)
+      out_rel <- rel_order(rel, exprs)
+      out <- rel_to_df(out_rel)
+    },
+    fallback = {
+      out <- NextMethod()
+    }
+  )
+
+  out <- dplyr_reconstruct(out, .data)
+  return(out)
+
+  # dplyr implementation
   loc <- arrange_rows(.data, dots = dots, locale = .locale)
   dplyr_row_slice(.data, loc)
 }
